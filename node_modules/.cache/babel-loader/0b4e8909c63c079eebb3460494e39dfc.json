{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\HTML\\\\todolist\\\\src\\\\component\\\\TaskList2.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport TodoList from './TodoList';\nimport AddTask from './AddTask';\nimport { Badge } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport Checked from '../image/checked.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList2() {\n  _s();\n\n  var [tasks, setTask] = useState({\n    task: [{\n      detail: 'Go club',\n      time: '22/3/2021 9am',\n      complete: 'true',\n      delete: true\n    }, {\n      detail: 'Go shopping',\n      time: '22/3/2021 10am',\n      complete: 'false',\n      delete: false\n    }, {\n      detail: 'Go home',\n      time: '22/3/2021 11am',\n      complete: 'false',\n      delete: false\n    }],\n    showAddForm: false\n  });\n  /* closeForm = () => {\r\n      setTask(tasks.showAddForm = false);\r\n  } */\n\n  addTask = (name, time) => {\n    let infor = {\n      detail: name,\n      time: time,\n      complete: 'false',\n      delete: false\n    };\n    this.state.tasks.push(infor);\n  };\n\n  if (tasks.showAddForm === true) {\n    return /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: this.addTask,\n      closeForm: () => {\n        setTask(tasks.showAddForm = false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"To do App designed by \", /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"success\",\n          children: \"Mountain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        hover: true,\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"STT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name of task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TodoList, {\n            name: task,\n            stt: index,\n            url: task.complete ? Checked : '',\n            deleted: () => this.deleted(task)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginRight: 5 + 'px'\n        },\n        className: \"btn btn-default\",\n        onClick: this.setStatus,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginRight: 5 + 'px'\n        },\n        className: \"btn btn-default\",\n        onClick: () => {\n          this.Xoa();\n        },\n        children: \"Delete Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(TaskList2, \"FezWwEd7aJIQmaMsUtUWqcldoho=\");\n\n_c = TaskList2;\nexport default TaskList2;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList2\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/HTML/todolist/src/component/TaskList2.js"],"names":["useState","TodoList","AddTask","Badge","Table","Checked","TaskList2","tasks","setTask","task","detail","time","complete","delete","showAddForm","addTask","name","infor","state","push","map","index","deleted","id","marginRight","setStatus","Xoa"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport TodoList from './TodoList';\r\nimport AddTask from './AddTask';\r\nimport { Badge } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\nimport Checked from '../image/checked.png';\r\n\r\nfunction TaskList2(){\r\n    var [tasks,setTask] = useState({\r\n        task:[\r\n        {detail:'Go club', time:'22/3/2021 9am', complete: 'true', delete: true},\r\n        {detail:'Go shopping', time:'22/3/2021 10am', complete: 'false', delete: false},\r\n        {detail:'Go home', time:'22/3/2021 11am', complete: 'false', delete: false}\r\n        ],\r\n        showAddForm: false});\r\n\r\n        /* closeForm = () => {\r\n            setTask(tasks.showAddForm = false);\r\n        } */\r\n\r\n        addTask = (name,time) => {\r\n            let infor={detail:name,time:time,complete:'false',delete:false};       \r\n            this.state.tasks.push(infor);\r\n        }\r\n\r\n        if (tasks.showAddForm === true) {\r\n            return (\r\n                <AddTask addTask={this.addTask} closeForm={() =>{setTask(tasks.showAddForm = false);} } />\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"container\">\r\n                    <h1>To do App designed by <Badge color=\"success\">Mountain</Badge></h1>\r\n                    <br />\r\n                    <br />\r\n                    <h2>List Task</h2>\r\n                    <Table hover className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Name of task</th>\r\n                            <th>Time</th>\r\n                            <th>Status</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>    \r\n                        <tbody>\r\n                            {\r\n                                this.state.tasks.map((task,index) =>\r\n                                 <TodoList key = {task.id}\r\n                                           name={task}\r\n                                           stt={index}\r\n                                           url={task.complete ? Checked : ''}\r\n                                           deleted={() => this.deleted(task)}/>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <button type=\"submit\" style={{marginRight: 5+ 'px'}} className=\"btn btn-default\" onClick={this.setStatus}>Add Task</button>\r\n                    <button type=\"submit\" style={{marginRight: 5+ 'px'}} className=\"btn btn-default\" onClick={() =>{this.Xoa()}}>Delete Task</button>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n\r\n}\r\n\r\nexport default TaskList2;"]},"metadata":{},"sourceType":"module"}