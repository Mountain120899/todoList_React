{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\HTML\\\\todolist\\\\src\\\\component\\\\TaskList.js\";\nimport React, { Component } from 'react';\nimport TodoList from './TodoList';\nimport AddTask from './AddTask';\nimport { Badge } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport Checked from '../image/checked.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setStatus = () => {\n      this.setState({\n        showAddForm: true\n      });\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        showAddForm: false\n      });\n    };\n\n    this.addTask = (name, time) => {\n      let infor = {\n        detail: name,\n        time: time,\n        complete: 'false',\n        delete: 'false'\n      };\n      this.state.tasks.push(infor);\n    };\n\n    this.kiemtra = x => {\n      if (x.complete === 'true') {\n        return Checked;\n      } else {\n        return '';\n      }\n    };\n\n    this.state = {\n      tasks: [{\n        detail: 'Go club',\n        time: '22/3/2021 9am',\n        complete: 'true',\n        delete: true\n      }, {\n        detail: 'Go shopping',\n        time: '22/3/2021 10am',\n        complete: 'false',\n        delete: false\n      }, {\n        detail: 'Go home',\n        time: '22/3/2021 11am',\n        complete: 'false',\n        delete: false\n      }],\n      showAddForm: false\n    };\n    this.kiemtra = this.kiemtra.bind(this);\n    this.deleted = this.deleted.bind(this);\n  }\n\n  deleted(x) {\n    /* const isdelete = x.delete;\r\n    const index = this.state.tasks.indexOf(x);\r\n      this.setState({\r\n    tasks:\r\n    [\r\n      ...this.state.tasks.slice(0, index),\r\n      {\r\n        ...x,\r\n        delete: !isdelete\r\n      },\r\n      ...this.state.tasks.slice(index+1)\r\n    ]\r\n    }\r\n    );\r\n    console.log(x); */\n    return event => {\n      const isdelete = x.delete;\n      const index = this.state.tasks.indexOf(x);\n      this.setState({\n        tasks: [...this.state.tasks.slice(0, index), { ...x,\n          delete: !isdelete\n        }, ...this.state.tasks.slice(index + 1)]\n      });\n    };\n    console.log(x);\n  }\n\n  render() {\n    if (this.state.showAddForm === true) {\n      return /*#__PURE__*/_jsxDEV(AddTask, {\n        addTask: this.addTask,\n        closeForm: this.closeForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"To do App designed by \", /*#__PURE__*/_jsxDEV(Badge, {\n            color: \"success\",\n            children: \"Mountain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"List Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          hover: true,\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"STT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name of task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.tasks.map((name, index) => /*#__PURE__*/_jsxDEV(TodoList, {\n              stt: index,\n              name: name,\n              url: this.kiemtra(name),\n              deteled: this.deleted(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 30\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginRight: 5 + 'px'\n          },\n          className: \"btn btn-default\",\n          onClick: this.setStatus,\n          children: \"Add Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginRight: 5 + 'px'\n          },\n          className: \"btn btn-default\",\n          children: \"Delete Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/HTML/todolist/src/component/TaskList.js"],"names":["React","Component","TodoList","AddTask","Badge","Table","Checked","TaskList","constructor","props","setStatus","setState","showAddForm","closeForm","addTask","name","time","infor","detail","complete","delete","state","tasks","push","kiemtra","x","bind","deleted","event","isdelete","index","indexOf","slice","console","log","render","map","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport TodoList from './TodoList';\r\nimport AddTask from './AddTask';\r\nimport { Badge } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\nimport Checked from '../image/checked.png';\r\n\r\nclass TaskList extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            tasks: [\r\n            {detail:'Go club', time:'22/3/2021 9am', complete: 'true', delete: true},\r\n            {detail:'Go shopping', time:'22/3/2021 10am', complete: 'false', delete: false},\r\n            {detail:'Go home', time:'22/3/2021 11am', complete: 'false', delete: false}\r\n            ],\r\n            showAddForm: false\r\n        }\r\n        this.kiemtra = this.kiemtra.bind(this);\r\n        this.deleted = this.deleted.bind(this);\r\n    }\r\n\r\n    setStatus = () => {\r\n        this.setState({\r\n            showAddForm: true\r\n        })\r\n    }\r\n    closeForm = () => {\r\n        this.setState({\r\n            showAddForm: false\r\n        })\r\n    }\r\n    addTask = (name,time) => {\r\n        let infor={detail:name,time:time,complete:'false',delete:'false'};       \r\n        this.state.tasks.push(infor);\r\n    }\r\n\r\n    kiemtra = (x) => {\r\n        if( x.complete === 'true')\r\n        {\r\n            return Checked;\r\n        }\r\n       else {\r\n           return '';\r\n       }\r\n    }\r\n\r\n    deleted(x) {\r\n         \r\n        /* const isdelete = x.delete;\r\n        const index = this.state.tasks.indexOf(x);\r\n\r\n        this.setState({\r\n        tasks:\r\n        [\r\n          ...this.state.tasks.slice(0, index),\r\n          {\r\n            ...x,\r\n            delete: !isdelete\r\n          },\r\n          ...this.state.tasks.slice(index+1)\r\n        ]\r\n        }\r\n        );\r\n        console.log(x); */\r\n        return (event) =>{\r\n        const isdelete = x.delete;\r\n        const index = this.state.tasks.indexOf(x);\r\n\r\n        this.setState({\r\n        tasks:\r\n        [\r\n          ...this.state.tasks.slice(0, index),\r\n          {\r\n            ...x,\r\n            delete: !isdelete\r\n          },\r\n          ...this.state.tasks.slice(index+1)\r\n        ]\r\n        }\r\n        );\r\n        };\r\n        console.log(x);\r\n    };  \r\n    \r\n\r\n    render(){\r\n        if (this.state.showAddForm === true) {\r\n            return (\r\n                <AddTask addTask={this.addTask} closeForm={this.closeForm} />\r\n            )\r\n        } else{\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>To do App designed by <Badge color=\"success\">Mountain</Badge></h1>\r\n                <br />\r\n                <br />\r\n                <h2>List Task</h2>\r\n                <Table hover className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Name of task</th>\r\n                        <th>Time</th>\r\n                        <th>Status</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>    \r\n                    <tbody>\r\n                        {\r\n                            this.state.tasks.map((name,index) =>\r\n                             <TodoList stt={index} name={name} \r\n                                       url={this.kiemtra(name)}\r\n                                       deteled={this.deleted(name)}/>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                <button type=\"submit\" style={{marginRight: 5+ 'px'}} className=\"btn btn-default\" onClick={this.setStatus}>Add Work</button>\r\n                <button type=\"submit\" style={{marginRight: 5+ 'px'}} className=\"btn btn-default\" >Delete Work</button>\r\n\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}